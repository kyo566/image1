import streamlit as st
from PIL import Image, ImageDraw, ImageFont
import requests
from io import BytesIO

st.set_page_config(page_title="‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ô‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î", layout="wide")
st.title("üñºÔ∏è ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î")

# ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ URL ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
image_urls = [
    "https://cdn.pixabay.com/photo/2024/05/26/10/15/bird-8788491_1280.jpg",
    "https://cdn.pixabay.com/photo/2018/09/24/08/52/mountains-3699372_1280.jpg",
    "https://cdn.pixabay.com/photo/2019/10/14/03/26/landscape-4547734_1280.jpg"
]

# ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô session_state
if "selected_index" not in st.session_state:
    st.session_state.selected_index = None
if "image_width" not in st.session_state:
    st.session_state.image_width = 400
if "image_height" not in st.session_state:
    st.session_state.image_height = 300

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if st.session_state.selected_index is None:
    cols = st.columns(3)
    for idx, url in enumerate(image_urls):
        with cols[idx]:
            try:
                response = requests.get(url)
                response.raise_for_status()
                image = Image.open(BytesIO(response.content))
                st.image(image, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {idx+1}", use_container_width=True)
                if st.button(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {idx+1}", key=f"btn_{idx}"):
                    st.session_state.selected_index = idx
            except Exception as e:
                st.error(f"‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {idx+1} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß
else:
    st.markdown("### üñºÔ∏è ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
    selected_url = image_urls[st.session_state.selected_index]

    try:
        response = requests.get(selected_url)
        response.raise_for_status()
        image = Image.open(BytesIO(response.content))

        # ‡∏™‡πÑ‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏Å‡∏ô X/Y
        col1, col2 = st.columns(2)
        with col1:
            width = st.slider("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á (‡πÅ‡∏Å‡∏ô X)", min_value=100, max_value=1000,
                              value=st.session_state.image_width, step=50)
        with col2:
            height = st.slider("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á (‡πÅ‡∏Å‡∏ô Y)", min_value=100, max_value=1000,
                               value=st.session_state.image_height, step=50)

        st.session_state.image_width = width
        st.session_state.image_height = height

        # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û
        resized = image.resize((width, height))

        # ‡∏ß‡∏≤‡∏î‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ö‡∏ô‡∏†‡∏≤‡∏û
        ruler_img = resized.copy()
        draw = ImageDraw.Draw(ruler_img)

        # ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡πÅ‡∏Å‡∏ô X (‡∏ö‡∏ô)
        for x in range(0, width, 50):
            draw.line([(x, 0), (x, 15)], fill="red", width=1)
            draw.text((x + 2, 16), str(x), fill="red")

        # ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡πÅ‡∏Å‡∏ô Y (‡∏ã‡πâ‡∏≤‡∏¢)
        for y in range(0, height, 50):
            draw.line([(0, y), (15, y)], fill="blue", width=1)
            draw.text((18, y), str(y), fill="blue")

        # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
        st.image(ruler_img, caption="‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î")

        if st.button("üîô ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏≠‡∏∑‡πà‡∏ô"):
            st.session_state.selected_index = None

    except Exception as e:
        st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ: {e}")
        if st.button("üîô ‡∏Å‡∏•‡∏±‡∏ö"):
            st.session_state.selected_index = None
