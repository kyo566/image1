import streamlit as st
from PIL import Image
import requests
from io import BytesIO
import matplotlib.pyplot as plt

st.set_page_config(page_title="‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ô‡∏Å‡∏à‡∏≤‡∏Å Pixabay ‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û", layout="wide")
st.title("üïäÔ∏è ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ô‡∏Å‡∏à‡∏≤‡∏Å Pixabay ‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û")

# ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ URL ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û
image_urls = [
    "https://cdn.pixabay.com/photo/2024/05/26/10/15/bird-8788491_1280.jpg",
    "https://cdn.pixabay.com/photo/2018/09/24/08/52/mountains-3699372_1280.jpg",
    "https://cdn.pixabay.com/photo/2019/10/14/03/26/landscape-4547734_1280.jpg"
]

image_names = [
    "‡∏ô‡∏Å üïäÔ∏è",
    "‡∏†‡∏π‡πÄ‡∏Ç‡∏≤ üèîÔ∏è",
    "‡∏ó‡∏¥‡∏ß‡∏ó‡∏±‡∏®‡∏ô‡πå üåÑ"
]

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL
def load_image(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        return Image.open(BytesIO(response.content))
    except Exception as e:
        st.error(f"‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
        return None

# ‡∏™‡∏£‡πâ‡∏≤‡∏á session state ‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (page) ‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if "page" not in st.session_state:
    st.session_state.page = "gallery"  # ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û)
if "selected_index" not in st.session_state:
    st.session_state.selected_index = None

# ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà (‡πÅ‡∏™‡∏î‡∏á 3 ‡∏£‡∏π‡∏õ + ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å)
def show_gallery():
    st.header("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà")
    cols = st.columns(3)
    for idx, url in enumerate(image_urls):
        img = load_image(url)
        if img:
            with cols[idx]:
                st.image(img, use_container_width=True, caption=image_names[idx])
                if st.button(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û: {image_names[idx]}", key=f"select_{idx}"):
                    st.session_state.selected_index = idx
                    st.session_state.page = "detail"

# ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
def show_detail():
    st.header(f"‡∏†‡∏≤‡∏û: {image_names[st.session_state.selected_index]}")
    image = load_image(image_urls[st.session_state.selected_index])
    if image is None:
        st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ")
        return

    # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û
    width = st.slider("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û (px)", 100, 1500, image.width, key="width")
    height = st.slider("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û (px)", 100, 1000, image.height, key="height")
    image_resized = image.resize((width, height))

    # ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
    if st.button("‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏Å‡∏•‡πÄ‡∏•‡∏≠‡∏£‡∏µ‡πà"):
        st.session_state.page = "gallery"
        return

    # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ç‡∏¢‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
    st.subheader("‡∏†‡∏≤‡∏û‡∏Ç‡∏¢‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥")
    st.image(image_resized, use_container_width=True)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î matplotlib
    st.subheader("‡∏†‡∏≤‡∏û‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏°‡πâ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î (matplotlib)")
    fig, ax = plt.subplots(figsize=(8, 6))
    ax.imshow(image_resized)
    ax.set_title("Original Image")
    ax.set_xlabel("X (Column)")
    ax.set_ylabel("Y (Row)")

    step_x = max(width // 10, 1)
    step_y = max(height // 10, 1)
    ax.grid(True, color='gray', linestyle='--', linewidth=0.5)
    ax.set_xticks(range(0, width+1, step_x))
    ax.set_yticks(range(0, height+1, step_y))

    st.pyplot(fig)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
if st.session_state.page == "gallery":
    show_gallery()
elif st.session_state.page == "detail":
    show_detail()
